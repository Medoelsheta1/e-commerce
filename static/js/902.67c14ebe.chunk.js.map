{"version":3,"file":"static/js/902.67c14ebe.chunk.js","mappings":"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","sources":["Components/Forms/LayoutForm.js","Components/hooks/useInput.js","Components/inputs/Inpute.js","Components/Forms/SignupForm.js","pages/Signup.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst LayoutForm = (props) => {\r\n    return (\r\n        <div className='form-content mb-4 rounded'>\r\n            <h1 className='text-white '>{props.header}</h1>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LayoutForm","import { useState } from \"react\"\r\n\r\n\r\nconst useInput = (validFun) => {\r\n    const [input , setInput] = useState('')\r\n    const [inInputTouched , setIsInputTouched] = useState(false)\r\n    const isInputValid = validFun(input)\r\n\r\n    const inputHandler = (e) => {\r\n\r\n        setIsInputTouched(true)\r\n        setInput(e.target.value)\r\n    }\r\n    const inputBlurHandler = () => {\r\n\r\n        setIsInputTouched(true)\r\n    }\r\n    const resetInput =() => {\r\n        setInput('')\r\n        setIsInputTouched(false)\r\n    }\r\n    return {\r\n        value: input,\r\n        isTouched: inInputTouched,\r\n        isValid: isInputValid,\r\n        reset: resetInput,\r\n        inputHandler,\r\n        inputBlurHandler\r\n    }\r\n}\r\n\r\nexport default useInput","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div className='input'> \r\n        <label className='me-2 fs-5 mb-1' htmlFor={props.name} >{props.label}</label>\r\n        <input className={`p-3 rounded w-100 ${props.isValueTouched && !props.isValueValid && 'bg-danger'}`} type={props.type} name={props.name} id={props.name} \r\n        onBlur={props.blurFunction} onChange={props.handleFunction} value={props.value}/>\r\n        { props.isValueTouched && !props.isValueValid && <p className='text-danger mt-1'>{props.message}</p>}\r\n    </div>   \r\n    )\r\n}\r\n\r\nexport default Input","import React, { useState } from 'react'\r\nimport LayoutForm from './LayoutForm'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport useInput from '../hooks/useInput'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AdduserData, LogIn } from '../RTK/Slices/CartSlice'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport Loader from '../Loaders/Loader'\r\nimport Inpute from '../inputs/Inpute'\r\nconst SignupForm = () => {\r\n    const Navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const [loading , setLoading] = useState(false)\r\n    const [image1 , setImage1] = useState('')\r\n    const image1Handler = (e) => {\r\n        setImage1(e.target.files[0])\r\n    }\r\n    const [err , setError] = useState(false)\r\n    const {value: firstName , isValid: isFirstNameValid ,\r\n        isTouched: isFirstNameTouched ,inputHandler: fNameInputHandler \r\n        , blurInputHandler: fNameBlurHandler } = useInput(value => value.trim() !== '')\r\n    const {value: lastName , isValid: isLastNameValid ,\r\n        isTouched: isLastNameTouched ,inputHandler: lNameInputHandler \r\n        , blurInputHandler: lNameBlurHandler } = useInput(value => value.trim() !== '')\r\n    const {value: mail , isValid: isEmailValid ,\r\n        isTouched: isEmailTouched ,inputHandler: emailInputHandler ,\r\n        blurInputHandler: emailBlurHandler } = useInput(value => value.includes('@'))\r\n    const {value: pass ,  isTouched: isPassTouched ,\r\n        isValid: isPassValid , inputHandler: passInputHandler \r\n        , inputBlurHandler: passBlurHandler \r\n    } = useInput( value => value.trim() !== '')\r\n    let formValidate = false \r\n    if (isEmailValid && isFirstNameValid && isPassValid && isLastNameValid){\r\n        formValidate = true\r\n    }    \r\n    const formHandler = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        if (!formValidate){\r\n            setLoading(false)\r\n            return;\r\n        }\r\n        const form = new FormData();\r\n        form.append(\"firstName\" , firstName)\r\n        form.append(\"lastName\" , lastName)\r\n        form.append(\"password\" , pass)\r\n        form.append(\"email\" , mail)\r\n        form.append(\"avatar\" , image1)\r\n        try {\r\n            const res = await axios.post('https://e-commerce-hh3m.onrender.com/api/signUp' , form)\r\n            console.log(res)\r\n            await dispatch(LogIn(res.data.data.newUser.token))   \r\n            await dispatch(AdduserData({\r\n                email: res.data.data.newUser.email,\r\n                id: res.data.data.newUser._id,\r\n                role: res.data.data.newUser.role\r\n            }))   \r\n            setLoading(false)\r\n            toast.success('Sign up successfully')\r\n            Navigate('/')          \r\n            \r\n        \r\n        }catch(error) {\r\n            setError(true)\r\n            setLoading(false)\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n\r\n        <LayoutForm header='Signup'>\r\n            <form className='w-100 p-4 text-white' onSubmit={formHandler}>\r\n                \r\n                <Inpute name={'fname'} label={'First Name'} type='text' message={\"Your first name can't be empty\"} value={firstName} isValueTouched={isFirstNameTouched} \r\n                isValueValid={isFirstNameValid} handleFunction={fNameInputHandler} blurFunction={fNameBlurHandler}/>\r\n                <Inpute name={'lname'} label={'Last Name'} type='text' message={\"Your last name can't be empty\"} value={lastName} isValueTouched={isLastNameTouched} \r\n                isValueValid={isLastNameValid} handleFunction={lNameInputHandler} blurFunction={lNameBlurHandler}/>\r\n                <Inpute name={'mail'} label={'Email'} type='text' message={\"Your Email must be valid\"} value={mail} isValueTouched={isEmailTouched} \r\n                isValueValid={isEmailValid} handleFunction={emailInputHandler} blurFunction={emailBlurHandler}/>\r\n                <Inpute name={'pass'} label={'Password'} type='password' message={\"Your pass Can't be empty\"} value={pass} isValueTouched={isPassTouched} \r\n                isValueValid={isPassValid} handleFunction={passInputHandler} blurFunction={passBlurHandler}/>\r\n                \r\n                {err && <p className='text-danger'>somthing went wrong please try again</p>}\r\n                <div className='productCustomizeImage d-flex flex-column justify-content-center w-100 mt-4 align-items-center'>  \r\n                        {image1 ? <img src={URL.createObjectURL(image1)} alt='img1' />: <img src=\"https://pbs.twimg.com/media/FtsxswzaUAAZXJj?format=jpg&name=small\" alt='img1'/>}\r\n                        <label  className='btn  btn-danger mt-4' htmlFor='image-upload1'>Add Profile Image</label>                              \r\n                </div>\r\n                <input className='d-none' type='file' onChange={image1Handler} id='image-upload1' accept='image/jpeg, image/png, image/jpg' />\r\n                <div className='buttons'>\r\n                    <button className='btn btn-lg btn-primary d-block w-100 mt-3'>SignUp</button>\r\n                    <Link to='/login' className='text-white'><button className='btn btn-lg btn-dark d-block w-100 mt-3'>Login</button></Link>\r\n                </div>\r\n            </form>\r\n        </LayoutForm>  \r\n        <ToastContainer\r\n        position=\"top-left\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"dark\"\r\n        />   \r\n        {loading && <Loader />}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default SignupForm","import SignupForm from \"../Components/Forms/SignupForm\"\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"signup\">\r\n            <SignupForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n"],"names":["props","_jsxs","className","children","_jsx","header","validFun","input","setInput","useState","inInputTouched","setIsInputTouched","value","isTouched","isValid","reset","resetInput","inputHandler","e","target","inputBlurHandler","htmlFor","name","label","concat","isValueTouched","isValueValid","type","id","onBlur","blurFunction","onChange","handleFunction","message","SignupForm","Navigate","useNavigate","dispatch","useDispatch","loading","setLoading","image1","setImage1","err","setError","firstName","isFirstNameValid","isFirstNameTouched","fNameInputHandler","blurInputHandler","fNameBlurHandler","useInput","trim","lastName","isLastNameValid","isLastNameTouched","lNameInputHandler","lNameBlurHandler","mail","isEmailValid","isEmailTouched","emailInputHandler","emailBlurHandler","includes","pass","isPassTouched","isPassValid","passInputHandler","passBlurHandler","formValidate","_Fragment","LayoutForm","onSubmit","async","preventDefault","form","FormData","append","res","axios","post","console","log","LogIn","data","newUser","token","AdduserData","email","_id","role","toast","success","error","Inpute","src","URL","createObjectURL","alt","files","accept","Link","to","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Loader","Signup"],"sourceRoot":""}